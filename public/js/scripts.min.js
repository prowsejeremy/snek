const scoreEle=document.getElementById("score"),finalScoreEle=document.getElementById("finalScore"),controlArea=document.getElementById("controlArea"),playerScore=document.getElementById("scoreField"),postScoreBtn=document.getElementById("postScore"),postScorePopUp=document.getElementById("postScorePopUp"),scoreForm=document.getElementById("scoreForm"),closeForm=document.getElementById("closeForm"),successMessage=document.getElementById("successMessage"),gameoverMessage=document.getElementById("gameover"),resetBtn=document.getElementById("resetBtn"),canvas=document.getElementById("canvas"),ctx=canvas.getContext("2d");let gameStart,gameEnabled,changeInitiated,velocityX,velocityY,gridSize,tileCount,snakeX,snakeY,appleX,appleY,poisonX,poisonY,bonusX,bonusY,trail,tailLength,score,runTime,appleImage,poisonImage,bonusImage;const init=function(){gameStart=!1,gameEnabled=!0,velocityX=velocityY=0,gridSize=18,tileCount=18,snakeX=snakeY=10,appleX=Math.floor(Math.random()*tileCount),appleY=Math.floor(Math.random()*tileCount),poisonX=!1,poisonY=!1,bonusX=!1,bonusY=!1,trail=[],tailLength=5,score=0,runTime=setInterval(game,100)},updateScore=function(a=!1,b=5){score=!0===a?0:score+=b,scoreEle.innerHTML=!0===a?0:score},gameOver=function(){gameEnabled=!1,clearInterval(runTime),finalScoreEle.innerHTML=score,scoreField.value=score,gameoverMessage.style="display:flex;"},reset=function(){gameEnabled=!0,updateScore(!0),gameoverMessage.style="display:none;",scoreForm.style="display:fles;",successMessage.style="display:none;",init()},game=function(){appleImage===void 0&&(appleImage=new Image,appleImage.src="/images/apple.svg"),poisonImage===void 0&&(poisonImage=new Image,poisonImage.src="/images/covid-2.svg"),bonusImage===void 0&&(bonusImage=new Image,bonusImage.src="/images/star-2.svg"),ctx.fillStyle="#161414",ctx.fillRect(0,0,canvas.width,canvas.height),snakeX+=velocityX,snakeY+=velocityY,canvas.style="outline: none;",0>snakeX&&(snakeX=tileCount-1),snakeX>tileCount-1&&(snakeX=0),0>snakeY&&(snakeY=tileCount-1),snakeY>tileCount-1&&(snakeY=0),ctx.fillStyle="#FFFFFF";for(let a=0;a<trail.length;a++){const b=trail[a];ctx.fillRect(b.x*gridSize,b.y*gridSize,gridSize-2,gridSize-2),gameStart&&snakeX===b.x&&snakeY===b.y&&gameOver()}for(trail.push({x:snakeX,y:snakeY});trail.length>tailLength;)trail.shift();snakeX===appleX&&snakeY===appleY&&(appleX=!1,appleY=!1,tailLength++,updateScore(!1,5),generateNewItem("apple"),0==tailLength%4&&!1===poisonX&&!1===poisonY&&generateNewItem("poison"),0==tailLength%7&&!1===poisonX&&!1===poisonY&&!1===bonusX&&!1===bonusY&&generateNewItem("bonus")),snakeX===poisonX&&snakeY===poisonY&&(poisonX=!1,poisonY=!1,updateScore(!1,-3)),snakeX===bonusX&&snakeY===bonusY&&(bonusX=!1,bonusY=!1,updateScore(!1,10)),!1!==appleX&&!1!==appleY&&ctx.drawImage(appleImage,appleX*gridSize,appleY*gridSize,gridSize-2,gridSize-2),!1!==poisonX&&!1!==poisonY&&(setTimeout(function(){poisonX=!1,poisonY=!1},5e3),ctx.drawImage(poisonImage,poisonX*gridSize,poisonY*gridSize,gridSize-2,gridSize-2)),!1!==bonusX&&!1!==bonusY&&(setTimeout(function(){bonusX=!1,bonusY=!1},5e3),ctx.drawImage(bonusImage,bonusX*gridSize,bonusY*gridSize,gridSize-2,gridSize-2))},generateNewItem=async function(a){const b=await pickNewItem(),c=await checkNewItem(b,a);c&&("apple"===a?(appleX=b.x,appleY=b.y):"poison"===a?(poisonX=b.x,poisonY=b.y):"bonus"===a?(bonusX=b.x,bonusY=b.y):void 0)},pickNewItem=function(){const a={x:Math.floor(Math.random()*tileCount),y:Math.floor(Math.random()*tileCount)};return a},checkNewItem=function(a,b){for(let c=0;c<trail.length;c++){const d=trail[c];if(a.x===d.x&&a.y===d.y)return generateNewItem(b),!1}return!0},handleDirChange=function(a){if(!gameEnabled||changeInitiated)return!1;setTimeout(function(){changeInitiated=!1},60);"left"===a?(gameStart=!0,0===velocityX&&(velocityX=-1,velocityY=0)):"up"===a?(gameStart=!0,0===velocityY&&(velocityX=0,velocityY=-1)):"right"===a?(gameStart=!0,0===velocityX&&(velocityX=1,velocityY=0)):"down"===a?(gameStart=!0,0===velocityY&&(velocityX=0,velocityY=1)):void 0;changeInitiated=!0},handleKeyPress=function(a){switch(a.keyCode){case 37:handleDirChange("left");break;case 38:handleDirChange("up");break;case 39:handleDirChange("right");break;case 40:handleDirChange("down");}},touchStartPos={x:0,y:0},touchEndPos={x:0,y:0},handleTouchStart=function(a){a.preventDefault(),touchStartPos.x=a.changedTouches[0].clientX,touchStartPos.y=a.changedTouches[0].clientY},handleTouchEnd=function(a){a.preventDefault(),touchEndPos.x=a.changedTouches[0].clientX,touchEndPos.y=a.changedTouches[0].clientY;const b=touchStartPos.x>touchEndPos.x?touchStartPos.x-touchEndPos.x:touchEndPos.x-touchStartPos.x,c=touchStartPos.y>touchEndPos.y?touchStartPos.y-touchEndPos.y:touchEndPos.y-touchStartPos.y;b>c?0<touchStartPos.x-touchEndPos.x?handleDirChange("left"):handleDirChange("right"):0<touchStartPos.y-touchEndPos.y?handleDirChange("up"):handleDirChange("down")},submitScore=function(){postScorePopUp.style="display:flex;"},submitFormHandler=function(a){a.preventDefault();const b=scoreForm.elements.playerName1.value+scoreForm.elements.playerName2.value+scoreForm.elements.playerName3.value,c=parseInt(scoreForm.elements.scoreField.value);if(2>b.length||c!==score)return!1;const d=new XMLHttpRequest;d.open("POST","/submit"),d.setRequestHeader("Content-Type","application/json;charset=UTF-8"),d.send(JSON.stringify({playerName:b,playerScore:c})),scoreForm.style="display:none;",successMessage.style="display:flex;"},closeHandler=function(){postScorePopUp.style="display:none;"};document.addEventListener("keydown",handleKeyPress),controlArea.addEventListener("touchstart",handleTouchStart),controlArea.addEventListener("touchend",handleTouchEnd),resetBtn.addEventListener("click",reset),postScoreBtn.addEventListener("click",submitScore),scoreForm.addEventListener("submit",submitFormHandler),closeForm.addEventListener("click",closeHandler),window.onload=function(){init()};